@page
@model PRN221_MeVaBe_WebClient.Pages.Cart.IndexModel
@{
}
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <title>Fruitables - Vegetable Website Template</title>
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <meta content="" name="keywords">
    <meta content="" name="description">

    <!-- Google Web Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600&family=Raleway:wght@600;800&display=swap" rel="stylesheet">

    <!-- Icon Font Stylesheet -->
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.4/css/all.css" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.4.1/font/bootstrap-icons.css" rel="stylesheet">

    <!-- SweetAlert-->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">

    <!-- Libraries Stylesheet -->
    <link href="../lib/lightbox/css/lightbox.min.css" rel="stylesheet">
    <link href="../lib/owlcarousel/assets/owl.carousel.min.css" rel="stylesheet">


    <!-- Customized Bootstrap Stylesheet -->
    <link href="../css/bootstrap.min.css" rel="stylesheet">

    <!-- Template Stylesheet -->
    <link href="../css/style.css" rel="stylesheet">
</head>

<body>

    <!-- Spinner Start -->
    <div id="spinner" class="show w-100 vh-100 bg-white position-fixed translate-middle top-50 start-50  d-flex align-items-center justify-content-center">
        <div class="spinner-grow text-primary" role="status"></div>
    </div>
    <!-- Spinner End -->
    <!-- Navbar start -->
    <!-- Navbar End -->
    <!-- Modal Search Start -->
    <!-- Modal Search End -->
    <!-- Single Page Header start -->
    <div class="container-fluid page-header py-5">
        <h1 class="text-center text-white display-6">Cart</h1>
        <ol class="breadcrumb justify-content-center mb-0">
            <li class="breadcrumb-item"><a href="#">Home</a></li>
            <li class="breadcrumb-item"><a href="#">Pages</a></li>
            <li class="breadcrumb-item active text-white">Cart</li>
        </ol>
    </div>
    <!-- Single Page Header End -->
    <!-- Cart Page Start -->
    <div class="container-fluid py-5">
        <div class="container py-5">
            <div class="table-responsive">
                <table class="table">
                    <thead>
                        <tr>
                            <th scope="col">Products</th>
                            <th scope="col">Name</th>
                            <th scope="col">Price</th>
                            <th scope="col">Quantity</th>
                            <th scope="col">Total</th>
                            <th scope="col">Handle</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (Model.CartItems != default)
                        {
                            @foreach (var items in Model.CartItems)
                            {
                                <tr>
                                    <th scope="row">
                                        <div class="d-flex align-items-center">
                                            <img src="../img/@items.Product.CoverImage" class="img-fluid me-5 rounded-circle" style="width: 80px; height: 80px;" alt="">
                                        </div>
                                    </th>
                                    <td>
                                        <p class="mb-0 mt-4">@items.Product.ProductName</p>
                                    </td>
                                    <td>
                                        <p class="mb-0 mt-4" id="unit-price-@items.Id">@items.Product.Price VND</p>
                                    </td>
                                    <td>
                                        <div class="input-group quantity mt-4" style="width: 100px;">
                                            <div class="input-group-btn">
                                                <button id="btn-minus-@items.Id" class="btn btn-sm btn-minus rounded-circle bg-light border" onclick="validValue(@items.Id)">
                                                    <i class="fa fa-minus"></i>
                                                </button>
                                            </div>
                                            <input type="text" id="quantity-input-@items.Id" class="form-control form-control-sm text-center border-0" value="@items.Quanity">
                                            <div class="input-group-btn">
                                                <button class="btn btn-sm btn-plus rounded-circle bg-light border" onclick="validValueWithPlus(@items.Id)">
                                                    <i class="fa fa-plus"></i>
                                                </button>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <p class="mb-0 mt-4" id="total-price-@items.Id">@(@items.Product.Price * @items.Quanity) VND</p>
                                    </td>
                                    <td>
                                        <button class="btn btn-md rounded-circle bg-light border mt-4" onclick="checkDelete(@items.Id)">
                                            <i class="fa fa-times text-danger"></i>
                                        </button>
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="6" class="text-center">Cart is empty</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="row g-4 justify-content-end">
                <div class="col-8"></div>
                <div class="col-sm-8 col-md-7 col-lg-6 col-xl-4">
                    <div class="bg-light rounded">
                        <div class="p-4">
                            <h1 class="display-6 mb-4">Cart <span class="fw-normal">Total</span></h1>
                            <div class="py-4 mb-4 border-top border-bottom d-flex justify-content-between">
                                <h5 class="mb-0 ps-4 me-4">Total</h5>
                                @if (Model._Cart != null)
                                {
                                    <p class="mb-0 pe-4" id="total-price-cart">@Model._Cart.Total VND</p>
                                }
                                else
                                {
                                    <p class="mb-0 pe-4">0 VND</p>
                                }
                            </div>
                            <button class="btn border-secondary rounded-pill px-4 py-3 text-primary text-uppercase mb-4 ms-4" type="button"><a asp-page="/Cart/Checkout">Proceed Checkout</a></button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Cart Page End -->
        <!-- Footer Start -->
        <!-- JavaScript Libraries -->
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.4/jquery.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js"></script>
        <script src="../lib/easing/easing.min.js"></script>
        <script src="../lib/waypoints/waypoints.min.js"></script>
        <script src="../lib/lightbox/js/lightbox.min.js"></script>
        <script src="../lib/owlcarousel/owl.carousel.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <!-- Template Javascript -->
        <script src="../js/main.js"></script>
        <script>

            function validValue(itemId) {
                const input = document.getElementById('quantity-input-' + itemId);
                const minusButton = document.getElementById('btn-minus-' + itemId);

                const unitPrice = document.querySelector('#unit-price-' + itemId);
                const totalPrice = document.querySelector('#total-price-' + itemId);
                const totalPriceCart = document.querySelector('#total-price-cart');

                const _unitPrice = parseInt(unitPrice.textContent.replace(/\D/g, ''), 10);
                const _totalPrice = parseInt(totalPrice.textContent.replace(/\D/g, ''), 10);
                const _totalPriceCart = parseInt(totalPriceCart.textContent.replace(/\D/g, ''), 10);

                let value = parseInt(input.value);
                value--;
                console.log(value);
                if (value <= 1) {
                    minusButton.disabled = true;
                } else {
                    minusButton.disabled = false;
                }
                totalPrice.innerHTML = (_totalPrice - _unitPrice).toString() + " VND";
                totalPriceCart.innerHTML = (_totalPriceCart - _unitPrice).toString() + " VND";
                let url = `/Cart/Index?handler=UpdateCartItem&cartItemId=${itemId}&quantity=${value}&totalCart=${_totalPriceCart + _unitPrice}`;
                fetch(url, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            console.log('Update success')
                        } else {
                            alert('Failed to add product to cart');
                        }
                    })
                    .catch((error) => {
                        console.error('Error:', error);
                        alert('An error occurred while adding the product to cart');
                    });
            }
            function validValueWithPlus(itemId) {
                const input = document.getElementById('quantity-input-' + itemId);
                const minusButton = document.getElementById('btn-minus-' + itemId);

                const unitPrice = document.querySelector('#unit-price-' + itemId);
                const totalPrice = document.querySelector('#total-price-' + itemId);
                const totalPriceCart = document.querySelector('#total-price-cart');

                const _unitPrice = parseInt(unitPrice.textContent.replace(/\D/g, ''), 10);
                const _totalPrice = parseInt(totalPrice.textContent.replace(/\D/g, ''), 10);
                const _totalPriceCart = parseInt(totalPriceCart.textContent.replace(/\D/g, ''), 10);

                let value = parseInt(input.value);
                value++;
                console.log(value);
                if (value <= 1) {
                    minusButton.disabled = true;
                } else {
                    minusButton.disabled = false;
                }
                totalPrice.innerHTML = (_totalPrice + _unitPrice).toString() + " VND";
                totalPriceCart.innerHTML = (_totalPriceCart + _unitPrice).toString() + " VND";
                let url = `/Cart/Index?handler=UpdateCartItem&cartItemId=${itemId}&quantity=${value}&totalCart=${_totalPriceCart + _unitPrice}`;
                fetch(url, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            console.log('Update success')
                        } else {
                            alert('Failed to add product to cart');
                        }
                    })
                    .catch((error) => {
                        console.error('Error:', error);
                        alert('An error occurred while adding the product to cart');
                    });
            }
            function checkDelete(cartItemId) {
                Swal.fire({
                    title: "Are you sure?",
                    text: "You won't be able to revert this!",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#3085d6",
                    cancelButtonColor: "#d33",
                    confirmButtonText: "Yes, delete it!"
                }).then((result) => {
                    if (result.isConfirmed) {
                        let url = `/Cart/Index?handler=DeleteCartItems&cartItemId=${cartItemId}`;
                        fetch(url, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        })
                            .then(response => response.json())
                            .then(data => {
                                if (data.success) {
                                    Swal.fire({
                                        title: "Deleted!",
                                        text: "Your file has been deleted.",
                                        icon: "success"
                                    });
                                    window.location.href = "/Cart/Index";
                                } else {
                                    alert('Failed to add product to cart');
                                }
                            })
                            .catch((error) => {
                                console.error('Error:', error);
                                alert('An error occurred while adding the product to cart');
                            });

                    }
                });
            }

        </script>
</body>

</html>